version: '3.9'

services:
    chrome:
        restart: always
        image: selenium/standalone-chrome:latest
        container_name: chrome
        hostname: chrome
        networks: 
            - backend
        privileged: true
        shm_size: 2g
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:4444"]
            interval: 1s
            timeout: 1s
            retries: 100
    scraper:
        container_name: scraper
        hostname: scraper
        build: 
            context: .
            dockerfile: Dockerfile-scraper
        networks: 
            - backend
        depends_on: 
            redis:
                condition: service_started
            chrome:
                condition: service_healthy
    redis:
        container_name: redis
        hostname: redis
        image: "redis:alpine"
        shm_size: 2g
        networks: 
            - backend
    api:
        container_name: api
        hostname: api
        build: 
            context: .
            dockerfile: Dockerfile-api
        depends_on: 
            - redis
        networks: 
            - backend
    ngrok:
        image: wernight/ngrok:latest
        container_name: ngrok_api
        depends_on: 
            - api
        networks: 
            - backend
        environment:
            NGROK_AUTH: #################################################
            NGROK_LOOK_DOMAIN: api
            NGROK_PROTOCOL: http
            NGROK_PORT: 5000

networks:
    backend:
        driver: "bridge"